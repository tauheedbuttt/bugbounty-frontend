import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { useReport } from "@/hooks/apis/use-report";
import { useTranslation } from "@/hooks/use-translation";
import { BOUNTY_TYPE } from "@/lib/enums";
import { Shield } from "lucide-react";
import { PieChart, Pie, Cell, ResponsiveContainer, Tooltip } from "recharts";

const vulnerabilityColorMap: Record<string, string> = {
  [BOUNTY_TYPE.Critical]: "#ef4444",
  [BOUNTY_TYPE.High]: "#f97316",
  [BOUNTY_TYPE.Medium]: "#eab308",
  [BOUNTY_TYPE.Low]: "#22c55e",
  [BOUNTY_TYPE.Informational]: "#3b82f6",
};

const DashboardVulnerabilityDistribution = () => {
  const { t } = useTranslation();
  const { useGetHackerReportsSeverities } = useReport();

  const { data } = useGetHackerReportsSeverities({});

  const severites = (data?.data?.severites ?? []).map((item) => ({
    name: item.severity,
    value: item.count,
    color: vulnerabilityColorMap[item.severity],
  }));

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Shield className="h-5 w-5" />
          {t.common.buttons.vulnerability_types}
        </CardTitle>
      </CardHeader>
      <CardContent>
        <ResponsiveContainer width="100%" height={300}>
          <PieChart>
            <Pie
              data={severites}
              cx="50%"
              cy="50%"
              innerRadius={60}
              outerRadius={100}
              paddingAngle={5}
              dataKey="value"
            >
              {severites.map((entry, index) => (
                <Cell key={`cell-${index}`} fill={entry.color} />
              ))}
            </Pie>
            <Tooltip />
          </PieChart>
        </ResponsiveContainer>
        <div className="flex flex-wrap gap-2 mt-4">
          {severites.map((item) => (
            <div key={item.name} className="flex items-center gap-2">
              <div
                className="w-3 h-3 rounded-full"
                style={{ backgroundColor: item.color }}
              />
              <span className="text-sm text-muted-foreground">{item.name}</span>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  );
};

export default DashboardVulnerabilityDistribution;
